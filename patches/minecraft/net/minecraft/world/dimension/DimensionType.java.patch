--- a/net/minecraft/world/dimension/DimensionType.java
+++ b/net/minecraft/world/dimension/DimensionType.java
@@ -10,7 +10,7 @@
 import net.minecraft.util.registry.Registry;
 import net.minecraft.world.World;
 
-public class DimensionType implements DynamicSerializable {
+public class DimensionType extends net.minecraftforge.registries.ForgeRegistryEntry<DimensionType> implements DynamicSerializable {
    public static final DimensionType OVERWORLD = register("overworld", new DimensionType(1, "", "", OverworldDimension::new, true));
    public static final DimensionType THE_NETHER = register("the_nether", new DimensionType(0, "_nether", "DIM-1", TheNetherDimension::new, false));
    public static final DimensionType THE_END = register("the_end", new DimensionType(2, "_end", "DIM1", TheEndDimension::new, false));
@@ -19,17 +19,31 @@
    private final String saveDir;
    private final BiFunction<World, DimensionType, ? extends Dimension> factory;
    private final boolean hasSkyLight;
+   private final boolean isVanilla;
+   private final net.minecraftforge.common.ModDimension modType;
+   private final net.minecraft.util.PacketByteBuf data;
 
    private static DimensionType register(String key, DimensionType type) {
       return Registry.register(Registry.DIMENSION, type.id, key, type);
    }
 
+   //Forge, Internal use only. Use DimensionManager instead.
+   @Deprecated
    protected DimensionType(int idIn, String suffixIn, String directoryIn, BiFunction<World, DimensionType, ? extends Dimension> p_i49935_4_, boolean p_i49935_5_) {
+      this(idIn, suffixIn, directoryIn, p_i49935_4_, p_i49935_5_, null, null);
+   }
+
+   //Forge, Internal use only. Use DimensionManager instead.
+   @Deprecated
+   public DimensionType(int idIn, String suffixIn, String directoryIn, BiFunction<World, DimensionType, ? extends Dimension> p_i49935_4_, boolean p_i49935_5_, @Nullable net.minecraftforge.common.ModDimension modType, @Nullable net.minecraft.util.PacketByteBuf data) {
       this.id = idIn;
       this.suffix = suffixIn;
       this.saveDir = directoryIn;
       this.factory = p_i49935_4_;
       this.hasSkyLight = p_i49935_5_;
+      this.isVanilla = this.id >= 0 && this.id <= 2;
+      this.modType = modType;
+      this.data = data;
    }
 
    public static DimensionType deserialize(Dynamic<?> p_218271_0_) {
@@ -44,8 +58,9 @@
       return this.id + -1;
    }
 
+   @Deprecated //Forge Do not use, only used for villages backwards compatibility
    public String getSuffix() {
-      return this.suffix;
+      return isVanilla ? this.suffix : "";
    }
 
    public File getFile(File p_212679_1_) {
@@ -57,7 +72,7 @@
    }
 
    public String toString() {
-      return getId(this).toString();
+      return "DimensionType{" + getId(this) + "}";
    }
 
    @Nullable
@@ -65,6 +80,20 @@
       return Registry.DIMENSION.get(id - -1);
    }
 
+   public boolean isVanilla() {
+      return this.isVanilla;
+   }
+
+   @Nullable
+   public net.minecraftforge.common.ModDimension getModType() {
+      return this.modType;
+   }
+
+   @Nullable
+   public net.minecraft.util.PacketByteBuf getData() {
+      return this.data;
+   }
+
    @Nullable
    public static DimensionType byId(Identifier nameIn) {
       return Registry.DIMENSION.get(nameIn);
