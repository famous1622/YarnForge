--- a/net\minecraft\world\biome\Biome.java
+++ b/net\minecraft\world\biome\Biome.java
@@ -54,7 +54,7 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
-public abstract class Biome {
+public abstract class Biome extends net.minecraftforge.registries.ForgeRegistryEntry<Biome> {
    public static final Logger LOGGER = LogManager.getLogger();
    public static final Set<Biome> BIOMES = Sets.newHashSet();
    public static final IdList<Biome> PARENT_BIOME_ID_MAP = new IdList<>();
@@ -143,11 +143,11 @@
    }
 
    protected void addSpawn(EntityCategory type, Biome.SpawnEntry spawnListEntry) {
-      this.spawns.get(type).add(spawnListEntry);
+      this.spawns.computeIfAbsent(type, k -> Lists.newArrayList()).add(spawnListEntry);
    }
 
    public List<Biome.SpawnEntry> getEntitySpawnList(EntityCategory creatureType) {
-      return this.spawns.get(creatureType);
+      return this.spawns.computeIfAbsent(creatureType, k -> Lists.newArrayList());
    }
 
    public Biome.Precipitation getPrecipitation() {
@@ -196,7 +196,7 @@
       if (this.getTemperature(water) >= 0.15F) {
          return false;
       } else {
-         if (water.getY() >= 0 && water.getY() < 256 && worldIn.getLightLevel(LightType.field_9282, water) < 10) {
+         if (water.getY() >= 0 && water.getY() < worldIn.getDimension().getHeight() && worldIn.getLightLevel(LightType.field_9282, water) < 10) {
             BlockState blockstate = worldIn.getBlockState(water);
             FluidState ifluidstate = worldIn.getFluidState(water);
             if (ifluidstate.getFluid() == Fluids.WATER && blockstate.getBlock() instanceof FluidBlock) {
@@ -221,7 +221,7 @@
       } else {
          if (pos.getY() >= 0 && pos.getY() < 256 && worldIn.getLightLevel(LightType.field_9282, pos) < 10) {
             BlockState blockstate = worldIn.getBlockState(pos);
-            if (blockstate.isAir() && Blocks.field_10477.getDefaultState().canPlaceAt(worldIn, pos)) {
+            if (blockstate.isAir(worldIn, pos) && Blocks.field_10477.getDefaultState().canPlaceAt(worldIn, pos)) {
                return true;
             }
          }
@@ -375,6 +375,17 @@
       return this.parent;
    }
 
+   public Biome getRiver() {
+      if (this == Biomes.field_9452) return Biomes.field_9463;
+      if (this == Biomes.field_9462 || this == Biomes.field_9407) return Biomes.field_9407;
+      return Biomes.field_9438;
+   }
+
+   @Nullable
+   public Biome getHill(net.minecraft.world.biome.layer.util.LayerRandomnessSource rand) {
+      return null;
+   }
+
    public static class Settings {
       @Nullable
       private ConfiguredSurfaceBuilder<?> surfaceBuilder;
@@ -526,6 +537,18 @@
       }
    }
 
+   public static class FlowerEntry extends WeightedPicker.Entry {
+      private final BlockState state;
+      public FlowerEntry(BlockState state, int weight) {
+         super(weight);
+         this.state = state;
+      }
+
+      public BlockState getState() {
+         return state;
+      }
+   }
+
    public static enum TemperatureGroup {
       field_9379("ocean"),
       field_9377("cold"),
