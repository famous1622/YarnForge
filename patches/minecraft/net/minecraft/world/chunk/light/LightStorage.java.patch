--- a/net/minecraft/world/chunk/light/LightStorage.java
+++ b/net/minecraft/world/chunk/light/LightStorage.java
@@ -15,8 +15,8 @@
 import net.minecraft.world.LightType;
 import net.minecraft.world.chunk.ChunkProvider;
 import net.minecraft.world.chunk.ChunkNibbleArray;
-import net.minecraft.world.chunk.WorldNibbleStorage;
 
+import net.minecraft.world.chunk.WorldNibbleStorage;
 
 public abstract class LightStorage<M extends WorldNibbleStorage<M>> extends SectionRelativeLevelPropagator {
    protected static final ChunkNibbleArray EMPTY = new ChunkNibbleArray();
@@ -156,6 +156,11 @@
       int j = ChunkSectionPos.fromChunkCoord(ChunkSectionPos.unpackLongY(sectionPosIn));
       int k = ChunkSectionPos.fromChunkCoord(ChunkSectionPos.unpackLongZ(sectionPosIn));
 
+      // FORGE: Optimize loop when lighting update count is lower than section size
+      if (engine.queuedUpdateSize() < 16 * 16 * 16) {
+         engine.bulkCancel(l -> ChunkSectionPos.toChunkLong(l) == sectionPosIn);
+         return;
+      }
       for(int l = 0; l < 16; ++l) {
          for(int i1 = 0; i1 < 16; ++i1) {
             for(int j1 = 0; j1 < 16; ++j1) {
