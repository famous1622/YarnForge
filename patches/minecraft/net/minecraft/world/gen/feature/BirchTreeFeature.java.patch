--- a/net/minecraft/world/gen/feature/BirchTreeFeature.java
+++ b/net/minecraft/world/gen/feature/BirchTreeFeature.java
@@ -18,6 +18,7 @@
    public BirchTreeFeature(Function<Dynamic<?>, ? extends DefaultFeatureConfig> configIn, boolean doBlockNotifyIn, boolean extraRandomHeightIn) {
       super(configIn, doBlockNotifyIn);
       this.alwaysTall = extraRandomHeightIn;
+      this.setSapling((net.minecraftforge.common.IPlantable)Blocks.BIRCH_SAPLING);
    }
 
    public boolean generate(Set<BlockPos> changedBlocks, ModifiableTestableWorld worldIn, Random rand, BlockPos position, MutableIntBoundingBox p_208519_5_) {
@@ -27,7 +28,7 @@
       }
 
       boolean flag = true;
-      if (position.getY() >= 1 && position.getY() + i + 1 <= 256) {
+      if (position.getY() >= 1 && position.getY() + i + 1 <= worldIn.getMaxHeight()) {
          for(int j = position.getY(); j <= position.getY() + 1 + i; ++j) {
             int k = 1;
             if (j == position.getY()) {
@@ -42,7 +43,7 @@
 
             for(int l = position.getX() - k; l <= position.getX() + k && flag; ++l) {
                for(int i1 = position.getZ() - k; i1 <= position.getZ() + k && flag; ++i1) {
-                  if (j >= 0 && j < 256) {
+                  if (j >= 0 && j < worldIn.getMaxHeight()) {
                      if (!canTreeReplace(worldIn, blockpos$mutableblockpos.set(l, j, i1))) {
                         flag = false;
                      }
@@ -55,8 +56,8 @@
 
          if (!flag) {
             return false;
-         } else if (isDirtOrGrass(worldIn, position.down()) && position.getY() < 256 - i - 1) {
-            this.setToDirt(worldIn, position.down());
+         } else if ((isSoil(worldIn, position.down(), getSapling())) && position.getY() < worldIn.getMaxHeight() - i - 1) {
+            this.setDirtAt(worldIn, position.down(), position);
 
             for(int l1 = position.getY() - 3 + i; l1 <= position.getY() + i; ++l1) {
                int j2 = l1 - (position.getY() + i);
