--- a/net/minecraft/world/gen/feature/Feature.java
+++ b/net/minecraft/world/gen/feature/Feature.java
@@ -1,7 +1,6 @@
 package net.minecraft.world.gen.feature;
 
 import com.google.common.collect.BiMap;
-import com.google.common.collect.HashBiMap;
 import com.google.common.collect.ImmutableList;
 import com.mojang.datafixers.Dynamic;
 import java.util.Collections;
@@ -20,10 +19,10 @@
 import net.minecraft.world.biome.Biome;
 import net.minecraft.world.gen.chunk.ChunkGenerator;
 import net.minecraft.world.gen.chunk.ChunkGeneratorConfig;
-import net.minecraft.world.gen.ProbabilityConfig;
 
+import net.minecraft.world.gen.ProbabilityConfig;
 
-public abstract class Feature<FC extends FeatureConfig> {
+public abstract class Feature<FC extends FeatureConfig> extends net.minecraftforge.registries.ForgeRegistryEntry<Feature<?>> {
    public static final StructureFeature<PillagerOutpostFeatureConfig> PILLAGER_OUTPOST = register("pillager_outpost", new PillagerOutpostFeature(PillagerOutpostFeatureConfig::deserialize));
    public static final StructureFeature<MineshaftFeatureConfig> MINESHAFT = register("mineshaft", new MineshaftFeature(MineshaftFeatureConfig::deserialize));
    public static final StructureFeature<DefaultFeatureConfig> WOODLAND_MANSION = register("woodland_mansion", new WoodlandMansionFeature(DefaultFeatureConfig::deserialize));
@@ -116,7 +115,8 @@
    public static final Feature<DefaultFeatureConfig> SWEET_BERRY_BUSH = register("sweet_berry_bush", new WildCropFeature(DefaultFeatureConfig::deserialize, Blocks.SWEET_BERRY_BUSH.getDefaultState().with(SweetBerryBushBlock.AGE, Integer.valueOf(3))));
    public static final Feature<FillLayerFeatureConfig> FILL_LAYER = register("fill_layer", new FillLayerFeature(FillLayerFeatureConfig::deserialize));
    public static final BonusChestFeature BONUS_CHEST = register("bonus_chest", new BonusChestFeature(DefaultFeatureConfig::deserialize));
-   public static final BiMap<String, StructureFeature<?>> STRUCTURES = SystemUtil.consume(HashBiMap.create(), (p_205170_0_) -> {
+   public static final BiMap<String, StructureFeature<?>> STRUCTURES = SystemUtil.consume(net.minecraftforge.registries.GameData.getStructureMap(), (p_205170_0_) -> {
+      if (true) return; // Forge: This is now a slave map to the feature registry, leave this code here to reduce patch size
       p_205170_0_.put("Pillager_Outpost".toLowerCase(Locale.ROOT), PILLAGER_OUTPOST);
       p_205170_0_.put("Mineshaft".toLowerCase(Locale.ROOT), MINESHAFT);
       p_205170_0_.put("Mansion".toLowerCase(Locale.ROOT), WOODLAND_MANSION);
