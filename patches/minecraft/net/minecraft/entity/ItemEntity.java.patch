--- a/net/minecraft/entity/ItemEntity.java
+++ b/net/minecraft/entity/ItemEntity.java
@@ -35,6 +35,10 @@
    private int health = 5;
    private UUID thrower;
    private UUID owner;
+   /**
+    * The maximum age of this EntityItem.  The item is expired once this is reached.
+    */
+   public int lifespan = 6000;
    public final float hoverHeight = (float)(Math.random() * Math.PI * 2.0D);
 
    public ItemEntity(EntityType<? extends ItemEntity> p_i50217_1_, World p_i50217_2_) {
@@ -51,6 +55,7 @@
    public ItemEntity(World worldIn, double x, double y, double z, ItemStack stack) {
       this(worldIn, x, y, z);
       this.setStack(stack);
+      this.lifespan = (stack.getItem() == null ? 6000 : stack.getEntityLifespan(worldIn));
    }
 
    protected boolean canClimb() {
@@ -62,6 +67,7 @@
    }
 
    public void tick() {
+      if (getStack().onEntityItemUpdate(this)) return;
       if (this.getStack().isEmpty()) {
          this.remove();
       } else {
@@ -93,7 +99,8 @@
             this.move(MovementType.SELF, this.getVelocity());
             float f = 0.98F;
             if (this.onGround) {
-               f = this.world.getBlockState(new BlockPos(this.x, this.getBoundingBox().minY - 1.0D, this.z)).getBlock().getSlipperiness() * 0.98F;
+               BlockPos pos = new BlockPos(this.x, this.getBoundingBox().minY - 1.0D, this.z);
+               f = this.world.getBlockState(pos).getSlipperiness(this.world, pos, this) * 0.98F;
             }
 
             this.setVelocity(this.getVelocity().multiply((double)f, 0.98D, (double)f));
@@ -127,7 +134,14 @@
             }
          }
 
-         if (!this.world.isClient && this.age >= 6000) {
+         ItemStack item = this.getStack();
+         if (!this.world.isClient && this.age >= lifespan) {
+             int hook = net.minecraftforge.event.ForgeEventFactory.onItemExpire(this, item);
+             if (hook < 0) this.remove();
+             else          this.lifespan += hook;
+         }
+
+         if (item.isEmpty()) {
             this.remove();
          }
 
@@ -180,6 +194,7 @@
    }
 
    private static void merge(ItemEntity p_213858_0_, ItemStack p_213858_1_, ItemEntity p_213858_2_, ItemStack p_213858_3_) {
+      if (!p_213858_1_.areCapsCompatible(p_213858_3_)) return;
       int i = Math.min(p_213858_1_.getMaxCount() - p_213858_1_.getCount(), p_213858_3_.getCount());
       ItemStack itemstack = p_213858_1_.copy();
       itemstack.increment(i);
@@ -203,6 +218,7 @@
    }
 
    public boolean damage(DamageSource source, float amount) {
+      if (this.world.isClient || this.removed) return false; //Forge: Fixes MC-53850
       if (this.isInvulnerableTo(source)) {
          return false;
       } else if (!this.getStack().isEmpty() && this.getStack().getItem() == Items.NETHER_STAR && source.isExplosive()) {
@@ -222,6 +238,7 @@
       compound.putShort("Health", (short)this.health);
       compound.putShort("Age", (short)this.age);
       compound.putShort("PickupDelay", (short)this.pickupDelay);
+      compound.putInt("Lifespan", lifespan);
       if (this.getThrower() != null) {
          compound.put("Thrower", TagHelper.serializeUuid(this.getThrower()));
       }
@@ -242,6 +259,7 @@
       if (compound.containsKey("PickupDelay")) {
          this.pickupDelay = compound.getShort("PickupDelay");
       }
+      if (compound.containsKey("Lifespan")) lifespan = compound.getInt("Lifespan");
 
       if (compound.containsKey("Owner", 10)) {
          this.owner = TagHelper.deserializeUuid(compound.getCompound("Owner"));
@@ -261,12 +279,20 @@
 
    public void onPlayerCollision(PlayerEntity entityIn) {
       if (!this.world.isClient) {
+         if (this.pickupDelay > 0) return;
          ItemStack itemstack = this.getStack();
          Item item = itemstack.getItem();
          int i = itemstack.getCount();
-         if (this.pickupDelay == 0 && (this.owner == null || 6000 - this.age <= 200 || this.owner.equals(entityIn.getUuid())) && entityIn.inventory.insertStack(itemstack)) {
-            entityIn.sendPickup(this, i);
+
+         int hook = net.minecraftforge.event.ForgeEventFactory.onItemPickup(this, entityIn);
+         if (hook < 0) return;
+
+         ItemStack copy = itemstack.copy();
+         if (this.pickupDelay == 0 && (this.owner == null || lifespan - this.age <= 200 || this.owner.equals(entityIn.getUuid())) && (hook == 1 || i <= 0 || entityIn.inventory.insertStack(itemstack))) {
+            copy.setCount(copy.getCount() - getStack().getCount());
+            net.minecraftforge.fml.hooks.BasicEventHooks.firePlayerItemPickupEvent(entityIn, this, copy);
             if (itemstack.isEmpty()) {
+               entityIn.sendPickup(this, i);
                this.remove();
                itemstack.setCount(i);
             }
@@ -353,7 +379,7 @@
 
    public void setDespawnImmediately() {
       this.setPickupDelayInfinite();
-      this.age = 5999;
+      this.age = getStack().getEntityLifespan(world) - 1;
    }
 
    public Packet<?> createSpawnPacket() {
