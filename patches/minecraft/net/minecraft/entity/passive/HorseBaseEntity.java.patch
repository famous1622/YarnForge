--- a/net\minecraft\entity\passive\HorseBaseEntity.java
+++ b/net\minecraft\entity\passive\HorseBaseEntity.java
@@ -261,6 +261,7 @@
 
       this.items.addListener(this);
       this.updateSaddle();
+      this.itemHandler = net.minecraftforge.common.util.LazyOptional.of(() -> new net.minecraftforge.items.wrapper.InvWrapper(this.items));
    }
 
    protected void updateSaddle() {
@@ -322,9 +323,9 @@
    protected void playStepSound(BlockPos pos, BlockState blockIn) {
       if (!blockIn.getMaterial().isLiquid()) {
          BlockState blockstate = this.world.getBlockState(pos.up());
-         BlockSoundGroup soundtype = blockIn.getSoundGroup();
+         BlockSoundGroup soundtype = blockIn.getSoundType(world, pos, this);
          if (blockstate.getBlock() == Blocks.field_10477) {
-            soundtype = blockstate.getSoundGroup();
+            soundtype = blockstate.getSoundType(world, pos, this);
          }
 
          if (this.hasPassengers() && this.field_6964) {
@@ -945,4 +946,22 @@
 
       return super.initialize(worldIn, difficultyIn, reason, spawnDataIn, dataTag);
    }
+
+   private net.minecraftforge.common.util.LazyOptional<?> itemHandler = null;
+
+   @Override
+   public <T> net.minecraftforge.common.util.LazyOptional<T> getCapability(net.minecraftforge.common.capabilities.Capability<T> capability, @Nullable net.minecraft.util.math.Direction facing) {
+      if (this.isAlive() && capability == net.minecraftforge.items.CapabilityItemHandler.ITEM_HANDLER_CAPABILITY && itemHandler != null)
+         return itemHandler.cast();
+      return super.getCapability(capability, facing);
+   }
+
+   @Override
+   public void remove(boolean keepData) {
+      super.remove(keepData);
+      if (!keepData && itemHandler != null) {
+         itemHandler.invalidate();
+         itemHandler = null;
+      }
+   }
 }
