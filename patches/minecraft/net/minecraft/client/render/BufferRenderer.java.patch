--- a/net/minecraft/client/render/BufferRenderer.java
+++ b/net/minecraft/client/render/BufferRenderer.java
@@ -1,6 +1,5 @@
 package net.minecraft.client.renderer;
 
-import com.mojang.blaze3d.platform.GLX;
 import com.mojang.blaze3d.platform.GlStateManager;
 import java.nio.ByteBuffer;
 import java.util.List;
@@ -18,29 +17,7 @@
 
          for(int j = 0; j < list.size(); ++j) {
             VertexFormatElement vertexformatelement = list.get(j);
-            VertexFormatElement.Type vertexformatelement$usage = vertexformatelement.getType();
-            int k = vertexformatelement.getFormat().getGlId();
-            int l = vertexformatelement.getIndex();
-            bytebuffer.position(vertexformat.getElementOffset(j));
-            switch(vertexformatelement$usage) {
-            case POSITION:
-               GlStateManager.vertexPointer(vertexformatelement.getCount(), k, i, bytebuffer);
-               GlStateManager.enableClientState(32884);
-               break;
-            case UV:
-               GLX.glClientActiveTexture(GLX.GL_TEXTURE0 + l);
-               GlStateManager.texCoordPointer(vertexformatelement.getCount(), k, i, bytebuffer);
-               GlStateManager.enableClientState(32888);
-               GLX.glClientActiveTexture(GLX.GL_TEXTURE0);
-               break;
-            case COLOR:
-               GlStateManager.colorPointer(vertexformatelement.getCount(), k, i, bytebuffer);
-               GlStateManager.enableClientState(32886);
-               break;
-            case NORMAL:
-               GlStateManager.normalPointer(k, i, bytebuffer);
-               GlStateManager.enableClientState(32885);
-            }
+            vertexformatelement.getType().preDraw(vertexformat, j, i, bytebuffer); // moved to VertexFormatElement.preDraw
          }
 
          GlStateManager.drawArrays(bufferBuilderIn.getDrawMode(), 0, bufferBuilderIn.getVertexCount());
@@ -48,24 +25,7 @@
 
          for(int j1 = list.size(); i1 < j1; ++i1) {
             VertexFormatElement vertexformatelement1 = list.get(i1);
-            VertexFormatElement.Type vertexformatelement$usage1 = vertexformatelement1.getType();
-            int k1 = vertexformatelement1.getIndex();
-            switch(vertexformatelement$usage1) {
-            case POSITION:
-               GlStateManager.disableClientState(32884);
-               break;
-            case UV:
-               GLX.glClientActiveTexture(GLX.GL_TEXTURE0 + k1);
-               GlStateManager.disableClientState(32888);
-               GLX.glClientActiveTexture(GLX.GL_TEXTURE0);
-               break;
-            case COLOR:
-               GlStateManager.disableClientState(32886);
-               GlStateManager.clearCurrentColor();
-               break;
-            case NORMAL:
-               GlStateManager.disableClientState(32885);
-            }
+            vertexformatelement1.getType().postDraw(vertexformat, i1, i, bytebuffer); // moved to VertexFormatElement.postDraw
          }
       }
 
