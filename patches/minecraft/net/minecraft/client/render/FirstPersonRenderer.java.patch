--- a/net/minecraft/client/render/FirstPersonRenderer.java
+++ b/net/minecraft/client/render/FirstPersonRenderer.java
@@ -34,8 +34,8 @@
 import net.minecraft.item.map.MapState;
 import net.minecraftforge.api.distmarker.Dist;
 import net.minecraftforge.api.distmarker.OnlyIn;
-import net.minecraft.client.render.item.ItemRenderer;
 
+import net.minecraft.client.render.item.ItemRenderer;
 
 @OnlyIn(Dist.CLIENT)
 public class FirstPersonRenderer {
@@ -277,7 +277,7 @@
       boolean flag1 = true;
       if (abstractclientplayerentity.isUsingItem()) {
          ItemStack itemstack = abstractclientplayerentity.getActiveItem();
-         if (itemstack.getItem() == Items.BOW || itemstack.getItem() == Items.CROSSBOW) {
+         if (itemstack.getItem() instanceof net.minecraft.item.RangedWeaponItem) {
             flag = abstractclientplayerentity.getActiveHand() == Hand.MAIN_HAND;
             flag1 = !flag;
          }
@@ -285,18 +285,18 @@
          Hand hand1 = abstractclientplayerentity.getActiveHand();
          if (hand1 == Hand.MAIN_HAND) {
             ItemStack itemstack1 = abstractclientplayerentity.getOffHandStack();
-            if (itemstack1.getItem() == Items.CROSSBOW && CrossbowItem.isCharged(itemstack1)) {
+            if (itemstack1.getItem() instanceof net.minecraft.item.CrossbowItem && CrossbowItem.isCharged(itemstack1)) {
                flag1 = false;
             }
          }
       } else {
          ItemStack itemstack2 = abstractclientplayerentity.getMainHandStack();
          ItemStack itemstack3 = abstractclientplayerentity.getOffHandStack();
-         if (itemstack2.getItem() == Items.CROSSBOW && CrossbowItem.isCharged(itemstack2)) {
+         if (itemstack2.getItem() instanceof net.minecraft.item.CrossbowItem && CrossbowItem.isCharged(itemstack2)) {
             flag1 = !flag;
          }
 
-         if (itemstack3.getItem() == Items.CROSSBOW && CrossbowItem.isCharged(itemstack3)) {
+         if (itemstack3.getItem() instanceof net.minecraft.item.CrossbowItem && CrossbowItem.isCharged(itemstack3)) {
             flag = !itemstack2.isEmpty();
             flag1 = !flag;
          }
@@ -309,12 +309,14 @@
       if (flag) {
          float f3 = hand == Hand.MAIN_HAND ? f : 0.0F;
          float f5 = 1.0F - MathHelper.lerp(partialTicks, this.prevEquipProgressMainHand, this.equipProgressMainHand);
+         if(!net.minecraftforge.client.ForgeHooksClient.renderSpecificFirstPersonHand(Hand.MAIN_HAND, partialTicks, f1, f3, f5, this.mainHand))
          this.renderFirstPersonItem(abstractclientplayerentity, partialTicks, f1, Hand.MAIN_HAND, f3, this.mainHand, f5);
       }
 
       if (flag1) {
          float f4 = hand == Hand.OFF_HAND ? f : 0.0F;
          float f6 = 1.0F - MathHelper.lerp(partialTicks, this.prevEquipProgressOffHand, this.equipProgressOffHand);
+         if(!net.minecraftforge.client.ForgeHooksClient.renderSpecificFirstPersonHand(Hand.OFF_HAND, partialTicks, f1, f4, f6, this.offHand))
          this.renderFirstPersonItem(abstractclientplayerentity, partialTicks, f1, Hand.OFF_HAND, f4, this.offHand, f6);
       }
 
@@ -330,7 +332,7 @@
          if (flag && !player.isInvisible()) {
             this.renderArmHoldingItem(equippedProgress, swingProgress, handside);
          }
-      } else if (stack.getItem() == Items.FILLED_MAP) {
+      } else if (stack.getItem() instanceof net.minecraft.item.FilledMapItem) {
          if (flag && this.offHand.isEmpty()) {
             this.renderMapInBothHands(pitch, equippedProgress, swingProgress);
          } else {
@@ -466,6 +468,7 @@
       if (this.client.player.isInsideWall()) {
          BlockState blockstate = this.client.world.getBlockState(new BlockPos(this.client.player));
          PlayerEntity playerentity = this.client.player;
+         BlockPos overlayPos = new BlockPos(this.client.player);
 
          for(int i = 0; i < 8; ++i) {
             double d0 = playerentity.x + (double)(((float)((i >> 0) % 2) - 0.5F) * playerentity.getWidth() * 0.8F);
@@ -475,20 +478,24 @@
             BlockState blockstate1 = this.client.world.getBlockState(blockpos);
             if (blockstate1.canSuffocate(this.client.world, blockpos)) {
                blockstate = blockstate1;
+               overlayPos = blockpos;
             }
          }
 
          if (blockstate.getRenderType() != BlockRenderType.INVISIBLE) {
-            this.renderBlock(this.client.getBlockRenderManager().getModels().getSprite(blockstate));
+            if (!net.minecraftforge.event.ForgeEventFactory.renderBlockOverlay(client.player, partialTicks, net.minecraftforge.client.event.RenderBlockOverlayEvent.OverlayType.BLOCK, blockstate, overlayPos))
+            this.renderBlock(this.client.getBlockRenderManager().getModels().getTexture(blockstate, client.world, overlayPos));
          }
       }
 
       if (!this.client.player.isSpectator()) {
          if (this.client.player.isInFluid(FluidTags.WATER)) {
+            if (!net.minecraftforge.event.ForgeEventFactory.renderWaterOverlay(client.player, partialTicks))
             this.renderWaterOverlay(partialTicks);
          }
 
          if (this.client.player.isOnFire()) {
+            if (!net.minecraftforge.event.ForgeEventFactory.renderFireOverlay(client.player, partialTicks))
             this.renderFireOverlay();
          }
       }
@@ -545,6 +552,7 @@
       bufferbuilder.vertex(1.0D, 1.0D, -0.5D).texture((double)(0.0F + f7), (double)(0.0F + f8)).next();
       bufferbuilder.vertex(-1.0D, 1.0D, -0.5D).texture((double)(4.0F + f7), (double)(0.0F + f8)).next();
       tessellator.draw();
+
       GlStateManager.popMatrix();
       GlStateManager.color4f(1.0F, 1.0F, 1.0F, 1.0F);
       GlStateManager.disableBlend();
@@ -601,8 +609,17 @@
          this.equipProgressOffHand = MathHelper.clamp(this.equipProgressOffHand - 0.4F, 0.0F, 1.0F);
       } else {
          float f = clientplayerentity.getAttackCooldownProgress(1.0F);
-         this.equipProgressMainHand += MathHelper.clamp((Objects.equals(this.mainHand, itemstack) ? f * f * f : 0.0F) - this.equipProgressMainHand, -0.4F, 0.4F);
-         this.equipProgressOffHand += MathHelper.clamp((float)(Objects.equals(this.offHand, itemstack1) ? 1 : 0) - this.equipProgressOffHand, -0.4F, 0.4F);
+
+         boolean requipM = net.minecraftforge.client.ForgeHooksClient.shouldCauseReequipAnimation(this.mainHand, itemstack, clientplayerentity.inventory.selectedSlot);
+         boolean requipO = net.minecraftforge.client.ForgeHooksClient.shouldCauseReequipAnimation(this.offHand, itemstack1, -1);
+
+         if (!requipM && !Objects.equals(this.mainHand, itemstack))
+             this.mainHand = itemstack;
+         if (!requipO && !Objects.equals(this.offHand, itemstack1))
+             this.offHand = itemstack1;
+
+         this.equipProgressMainHand += MathHelper.clamp((!requipM ? f * f * f : 0.0F) - this.equipProgressMainHand, -0.4F, 0.4F);
+         this.equipProgressOffHand += MathHelper.clamp((float)(!requipO ? 1 : 0) - this.equipProgressOffHand, -0.4F, 0.4F);
       }
 
       if (this.equipProgressMainHand < 0.1F) {
