--- a/net/minecraft/block/entity/BeaconBlockEntity.java
+++ b/net/minecraft/block/entity/BeaconBlockEntity.java
@@ -11,7 +11,6 @@
 import net.minecraft.block.Block;
 import net.minecraft.block.BlockState;
 import net.minecraft.block.Blocks;
-import net.minecraft.client.block.ColoredBlock;
 import net.minecraft.entity.player.PlayerEntity;
 import net.minecraft.entity.player.PlayerInventory;
 import net.minecraft.server.network.ServerPlayerEntity;
@@ -36,8 +35,8 @@
 import net.minecraft.world.Heightmap;
 import net.minecraftforge.api.distmarker.Dist;
 import net.minecraftforge.api.distmarker.OnlyIn;
-import net.minecraft.util.Tickable;
 
+import net.minecraft.util.Tickable;
 
 public class BeaconBlockEntity extends BlockEntity implements NameableContainerProvider, Tickable {
    public static final StatusEffect[][] EFFECTS_BY_LEVEL = new StatusEffect[][]{{StatusEffects.SPEED, StatusEffects.HASTE}, {StatusEffects.RESISTANCE, StatusEffects.JUMP_BOOST}, {StatusEffects.STRENGTH}, {StatusEffects.REGENERATION}};
@@ -113,8 +112,8 @@
       for(int i1 = 0; i1 < 10 && blockpos.getY() <= l; ++i1) {
          BlockState blockstate = this.world.getBlockState(blockpos);
          Block block = blockstate.getBlock();
-         if (block instanceof ColoredBlock) {
-            float[] afloat = ((ColoredBlock)block).getColor().getColorComponents();
+         float[] afloat = blockstate.getBeaconColorMultiplier(this.world, blockpos, getPos());
+         if (afloat != null) {
             if (this.field_19178.size() <= 1) {
                beacontileentity$beamsegment = new BeaconBlockEntity.BeamSegment(afloat);
                this.field_19178.add(beacontileentity$beamsegment);
@@ -185,8 +184,7 @@
 
          for(int k = p_213927_1_ - i; k <= p_213927_1_ + i && flag; ++k) {
             for(int l = p_213927_3_ - i; l <= p_213927_3_ + i; ++l) {
-               Block block = this.world.getBlockState(new BlockPos(k, j, l)).getBlock();
-               if (block != Blocks.EMERALD_BLOCK && block != Blocks.GOLD_BLOCK && block != Blocks.DIAMOND_BLOCK && block != Blocks.IRON_BLOCK) {
+               if (!this.world.getBlockState(new BlockPos(k, j, l)).isBeaconBase(this.world, new BlockPos(k, j, l), getPos())) {
                   flag = false;
                   break;
                }
