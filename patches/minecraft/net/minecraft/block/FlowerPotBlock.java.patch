--- a/net/minecraft/block/FlowerPotBlock.java
+++ b/net/minecraft/block/FlowerPotBlock.java
@@ -22,10 +22,37 @@
    protected static final VoxelShape SHAPE = Block.createCuboidShape(5.0D, 0.0D, 5.0D, 11.0D, 6.0D, 11.0D);
    private final Block content;
 
+   private final Map<net.minecraft.util.Identifier, java.util.function.Supplier<? extends Block>> fullPots;
+   private final java.util.function.Supplier<FlowerPotBlock> emptyPot;
+   private final java.util.function.Supplier<? extends Block> flowerDelegate;
+
+   @Deprecated // Mods should use the constructor below
    public FlowerPotBlock(Block p_i48395_1_, Block.Settings p_i48395_2_) {
+      this(Blocks.FLOWER_POT == null ? null : () -> (FlowerPotBlock) Blocks.FLOWER_POT.delegate.get(), () -> p_i48395_1_.delegate.get(), p_i48395_2_);
+      if (Blocks.FLOWER_POT != null) {
+         ((FlowerPotBlock)Blocks.FLOWER_POT).addPlant(p_i48395_1_.getRegistryName(), () -> this);
+      }
+   }
+
+   /**
+    * For mod use, eliminates the need to extend this class, and prevents modded
+    * flower pots from altering vanilla behavior.
+    * 
+    * @param emptyPot    The empty pot for this pot, or null for self.
+    * @param p_i48395_1_ The flower block.
+    * @param p_i48395_2_
+    */
+   public FlowerPotBlock(@javax.annotation.Nullable java.util.function.Supplier<FlowerPotBlock> emptyPot, java.util.function.Supplier<? extends Block> p_i48395_1_, Block.Settings p_i48395_2_) {
       super(p_i48395_2_);
-      this.content = p_i48395_1_;
-      CONTENT_TO_POTTED.put(p_i48395_1_, this);
+      this.content = null; // Unused, redirected by coremod
+      this.flowerDelegate = p_i48395_1_;
+      if (emptyPot == null) {
+         this.fullPots = Maps.newHashMap();
+         this.emptyPot = null;
+      } else {
+         this.fullPots = java.util.Collections.emptyMap();
+         this.emptyPot = emptyPot;
+      }
    }
 
    public VoxelShape getOutlineShape(BlockState state, BlockView worldIn, BlockPos pos, EntityContext context) {
@@ -39,7 +66,7 @@
    public boolean activate(BlockState state, World worldIn, BlockPos pos, PlayerEntity player, Hand handIn, BlockHitResult hit) {
       ItemStack itemstack = player.getStackInHand(handIn);
       Item item = itemstack.getItem();
-      Block block = item instanceof BlockItem ? CONTENT_TO_POTTED.getOrDefault(((BlockItem)item).getBlock(), Blocks.AIR) : Blocks.AIR;
+      Block block = item instanceof BlockItem ? getEmptyPot().fullPots.getOrDefault(((BlockItem)item).getBlock().getRegistryName(), Blocks.AIR.delegate).get() : Blocks.AIR;
       boolean flag = block == Blocks.AIR;
       boolean flag1 = this.content == Blocks.AIR;
       if (flag != flag1) {
@@ -57,7 +84,7 @@
                player.dropItem(itemstack1, false);
             }
 
-            worldIn.setBlockState(pos, Blocks.FLOWER_POT.getDefaultState(), 3);
+            worldIn.setBlockState(pos, getEmptyPot().getDefaultState(), 3);
          }
       }
 
@@ -77,6 +104,17 @@
    }
 
    public Block getContent() {
-      return this.content;
+      return flowerDelegate.get();
+   }
+   
+   public FlowerPotBlock getEmptyPot() {
+      return emptyPot == null ? this : emptyPot.get();
+   }
+   
+   public void addPlant(net.minecraft.util.Identifier flower, java.util.function.Supplier<? extends Block> fullPot) {
+      if (getEmptyPot() != this) {
+          throw new IllegalArgumentException("Cannot add plant to non-empty pot: " + this);
+      }
+      fullPots.put(flower, fullPot);
    }
 }
