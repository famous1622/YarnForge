--- a/net/minecraft/block/PistonBlock.java
+++ b/net/minecraft/block/PistonBlock.java
@@ -165,6 +165,7 @@
       }
 
       if (id == 0) {
+         if(net.minecraftforge.event.ForgeEventFactory.onPistonMovePre(worldIn, pos, direction, true)) return false;
          if (!this.move(worldIn, pos, direction, true)) {
             return false;
          }
@@ -172,6 +173,7 @@
          worldIn.setBlockState(pos, state.with(EXTENDED, Boolean.valueOf(true)), 67);
          worldIn.playSound((PlayerEntity)null, pos, SoundEvents.BLOCK_PISTON_EXTEND, SoundCategory.BLOCKS, 0.5F, worldIn.random.nextFloat() * 0.25F + 0.6F);
       } else if (id == 1 || id == 2) {
+          if(net.minecraftforge.event.ForgeEventFactory.onPistonMovePre(worldIn, pos, direction, false)) return false;
          BlockEntity tileentity1 = worldIn.getBlockEntity(pos.offset(direction));
          if (tileentity1 instanceof PistonBlockEntity) {
             ((PistonBlockEntity)tileentity1).finish();
@@ -196,7 +198,7 @@
             }
 
             if (!flag1) {
-               if (id != 1 || blockstate.isAir() || !isMovable(blockstate, worldIn, blockpos, direction.getOpposite(), false, direction) || blockstate.getPistonBehavior() != PistonBehavior.NORMAL && block != Blocks.PISTON && block != Blocks.STICKY_PISTON) {
+               if (id != 1 || blockstate.isAir(worldIn, blockpos) || !isMovable(blockstate, worldIn, blockpos, direction.getOpposite(), false, direction) || blockstate.getPistonBehavior() != PistonBehavior.NORMAL && block != Blocks.PISTON && block != Blocks.STICKY_PISTON) {
                   worldIn.clearBlockState(pos.offset(direction), false);
                } else {
                   this.move(worldIn, pos, direction, false);
@@ -209,6 +211,7 @@
          worldIn.playSound((PlayerEntity)null, pos, SoundEvents.BLOCK_PISTON_CONTRACT, SoundCategory.BLOCKS, 0.5F, worldIn.random.nextFloat() * 0.15F + 0.6F);
       }
 
+      net.minecraftforge.event.ForgeEventFactory.onPistonMovePost(worldIn, pos, direction, (id == 0));
       return true;
    }
 
@@ -237,7 +240,7 @@
                return false;
             }
 
-            return !block.hasBlockEntity();
+            return !blockStateIn.hasTileEntity();
          } else {
             return false;
          }
@@ -273,7 +276,7 @@
          for(int j = list2.size() - 1; j >= 0; --j) {
             BlockPos blockpos2 = list2.get(j);
             BlockState blockstate = worldIn.getBlockState(blockpos2);
-            BlockEntity tileentity = blockstate.getBlock().hasBlockEntity() ? worldIn.getBlockEntity(blockpos2) : null;
+            BlockEntity tileentity = blockstate.hasTileEntity() ? worldIn.getBlockEntity(blockpos2) : null;
             dropStacks(blockstate, worldIn, blockpos2, tileentity);
             worldIn.setBlockState(blockpos2, Blocks.AIR.getDefaultState(), 18);
             --k;
@@ -327,6 +330,10 @@
       return state.with(FACING, rot.rotate(state.get(FACING)));
    }
 
+   public BlockState rotate(BlockState state, net.minecraft.world.IWorld world, BlockPos pos, BlockRotation direction) {
+       return state.get(EXTENDED) ? state : super.rotate(state, world, pos, direction);
+   }
+
    public BlockState mirror(BlockState state, BlockMirror mirrorIn) {
       return state.rotate(mirrorIn.getRotation(state.get(FACING)));
    }
