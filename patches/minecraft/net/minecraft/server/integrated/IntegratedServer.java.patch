--- a/net\minecraft\server\integrated\IntegratedServer.java
+++ b/net\minecraft\server\integrated\IntegratedServer.java
@@ -64,6 +64,8 @@
       this.upgradeWorld(saveName);
       WorldSaveHandler savehandler = this.getLevelStorage().createSaveHandler(saveName, this);
       this.loadWorldResourcePack(this.getLevelName(), savehandler);
+      // Move factory creation earlier to prevent startupquery deadlock
+      WorldGenerationProgressListener ichunkstatuslistener = this.worldGenerationProgressListenerFactory.create(11);
       LevelProperties worldinfo = savehandler.readProperties();
       if (worldinfo == null) {
          worldinfo = new LevelProperties(this.levelInfo, worldNameIn);
@@ -73,7 +75,6 @@
 
       worldinfo.method_24285(this.getServerModName(), this.method_24307().isPresent());
       this.loadWorldDataPacks(savehandler.getWorldDir(), worldinfo);
-      WorldGenerationProgressListener ichunkstatuslistener = this.worldGenerationProgressListenerFactory.create(11);
       this.createWorlds(savehandler, worldinfo, this.levelInfo, ichunkstatuslistener);
       if (this.getWorld(DimensionType.field_13072).getLevelProperties().getDifficulty() == null) {
          this.setDifficulty(this.client.options.difficulty, true);
@@ -91,9 +92,10 @@
       this.setFlightEnabled(true);
       LOGGER.info("Generating keypair");
       this.setKeyPair(NetworkEncryptionUtils.generateServerKeyPair());
+      if (!net.minecraftforge.fml.server.ServerLifecycleHooks.handleServerAboutToStart(this)) return false;
       this.loadWorld(this.getLevelName(), this.getServerName(), this.levelInfo.getSeed(), this.levelInfo.getGeneratorType(), this.levelInfo.getGeneratorOptions());
       this.setMotd(this.getUserName() + " - " + this.getWorld(DimensionType.field_13072).getLevelProperties().getLevelName());
-      return true;
+      return net.minecraftforge.fml.server.ServerLifecycleHooks.handleServerStarting(this);
    }
 
    public void tick(BooleanSupplier hasTimeLeft) {
@@ -128,6 +130,7 @@
    }
 
    public Difficulty getDefaultDifficulty() {
+      if (this.client.world == null) return this.client.options.difficulty; // Fix NPE just in case.
       return this.client.world.getLevelProperties().getDifficulty();
    }
 
@@ -219,6 +222,7 @@
    }
 
    public void stop(boolean waitForServer) {
+      if (isRunning())
       this.submitAndJoin(() -> {
          for(ServerPlayerEntity serverplayerentity : Lists.newArrayList(this.getPlayerManager().getPlayerList())) {
             if (!serverplayerentity.getUuid().equals(this.localPlayerUuid)) {
