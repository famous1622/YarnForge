--- a/net/minecraft/server/world/ThreadedAnvilChunkStorage.java
+++ b/net/minecraft/server/world/ThreadedAnvilChunkStorage.java
@@ -359,6 +359,7 @@
       iprofiler.swap("chunk_unload");
       if (!this.world.isSavingDisabled()) {
          this.method_20605(hasMoreTime);
+         if (this.currentChunkHolders.isEmpty()) net.minecraftforge.common.DimensionManager.unloadWorld(this.world);
       }
 
       iprofiler.pop();
@@ -395,6 +396,7 @@
             if (this.field_18807.remove(chunkPosIn, chunkHolderIn) && p_219185_5_ != null) {
                if (p_219185_5_ instanceof WorldChunk) {
                   ((WorldChunk)p_219185_5_).setLoadedToWorld(false);
+                  net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.world.ChunkEvent.Unload((WorldChunk)p_219185_5_));
                }
 
                this.save(p_219185_5_);
@@ -472,6 +474,7 @@
                if (flag) {
                   Chunk ichunk = ChunkSerializer.deserialize(this.world, this.structureManager, this.pointOfInterestStorage, p_223172_1_, compoundnbt);
                   ichunk.setLastSaveTime(this.world.getTime());
+                  net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.world.ChunkEvent.Load(ichunk));
                   return Either.left(ichunk);
                }
 
@@ -581,6 +584,7 @@
                if (list != null) {
                   list.forEach(chunk::remove);
                }
+               net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.world.ChunkEvent.Load(chunk));
             }
 
             return chunk;
@@ -665,6 +669,7 @@
             }
 
             CompoundTag compoundnbt1 = ChunkSerializer.serialize(this.world, chunkIn);
+            net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.world.ChunkDataEvent.Save(chunkIn, compoundnbt1));
             this.setTagAt(chunkpos, compoundnbt1);
             return true;
          } catch (Exception exception) {
@@ -801,6 +806,7 @@
       for(int l = i - this.watchDistance; l <= i + this.watchDistance; ++l) {
          for(int k = j - this.watchDistance; k <= j + this.watchDistance; ++k) {
             ChunkPos chunkpos = new ChunkPos(l, k);
+            net.minecraftforge.event.ForgeEventFactory.fireChunkWatch(track, player, chunkpos, world);
             this.sendWatchPackets(player, chunkpos, new Packet[2], !track, track);
          }
       }
