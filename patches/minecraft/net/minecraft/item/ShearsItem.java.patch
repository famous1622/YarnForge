--- a/net/minecraft/item/ShearsItem.java
+++ b/net/minecraft/item/ShearsItem.java
@@ -9,6 +9,8 @@
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.world.World;
 
+import net.minecraft;
+
 public class ShearsItem extends Item {
    public ShearsItem(Item.Settings builder) {
       super(builder);
@@ -38,4 +40,26 @@
          return 15.0F;
       }
    }
+
+   @SuppressWarnings("deprecation")
+   @Override
+   public boolean useOnEntity(ItemStack stack, net.minecraft.entity.player.PlayerEntity playerIn, LivingEntity entity, net.minecraft.util.Hand hand) {
+      if (entity.world.isClient) return false;
+      if (entity instanceof net.minecraftforge.common.IShearable) {
+         net.minecraftforge.common.IShearable target = (net.minecraftforge.common.IShearable)entity;
+         BlockPos pos = new BlockPos(entity.x, entity.y, entity.z);
+         if (target.isShearable(stack, entity.world, pos)) {
+            java.util.List<ItemStack> drops = target.onSheared(stack, entity.world, pos,
+                    net.minecraft.enchantment.EnchantmentHelper.getLevel(net.minecraft.enchantment.Enchantments.FORTUNE, stack));
+            java.util.Random rand = new java.util.Random();
+            drops.forEach(d -> {
+               net.minecraft.entity.ItemEntity ent = entity.dropStack(d, 1.0F);
+               ent.setVelocity(ent.getVelocity().add((double)((rand.nextFloat() - rand.nextFloat()) * 0.1F), (double)(rand.nextFloat() * 0.05F), (double)((rand.nextFloat() - rand.nextFloat()) * 0.1F)));
+            });
+            stack.damage(1, entity, e -> e.sendToolBreakStatus(hand));
+         }
+         return true;
+      }
+      return false;
+   }
 }
