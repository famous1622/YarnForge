--- a/net\minecraft\util\registry\Registry.java
+++ b/net\minecraft\util\registry\Registry.java
@@ -39,7 +39,6 @@
 import net.minecraft.sound.SoundEvents;
 import net.minecraft.stat.StatType;
 import net.minecraft.stat.Stats;
-import net.minecraft.structure.StructureFeatures;
 import net.minecraft.structure.StructurePieceType;
 import net.minecraft.structure.pool.StructurePoolElementType;
 import net.minecraft.structure.processor.StructureProcessorType;
@@ -70,88 +69,90 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
+/*
+ * Attention Modders: This SHOULD NOT be used, you should use ForgeRegistries instead. As it has a cleaner modder facing API.
+ * We will be wrapping all of these in our API as necessary for syncing and management.
+ */
 public abstract class Registry<T> implements IndexedIterable<T> {
    protected static final Logger LOGGER = LogManager.getLogger();
    private static final Map<Identifier, Supplier<?>> DEFAULT_ENTRIES = Maps.newLinkedHashMap();
    public static final MutableRegistry<MutableRegistry<?>> REGISTRIES = new SimpleRegistry<>();
-   public static final Registry<SoundEvent> field_11156 = create("sound_event", () -> {
+   @Deprecated public static final Registry<SoundEvent> field_11156 = forge("sound_event", SoundEvent.class, () -> {
       return SoundEvents.field_15197;
    });
-   public static final DefaultedRegistry<Fluid> field_11154 = create("fluid", "empty", () -> {
+   @Deprecated public static final DefaultedRegistry<Fluid> field_11154 = forgeDefaulted("fluid", Fluid.class, () -> {
       return Fluids.field_15906;
    });
-   public static final Registry<StatusEffect> STATUS_EFFECT = create("mob_effect", () -> {
+   @Deprecated public static final Registry<StatusEffect> STATUS_EFFECT = forge("mob_effect", StatusEffect.class, () -> {
       return StatusEffects.field_5926;
    });
-   public static final DefaultedRegistry<Block> field_11146 = create("block", "air", () -> {
+   @Deprecated public static final DefaultedRegistry<Block> field_11146 = forgeDefaulted("block", Block.class, () -> {
       return Blocks.field_10124;
    });
-   public static final Registry<Enchantment> field_11160 = create("enchantment", () -> {
+   @Deprecated public static final Registry<Enchantment> field_11160 = forge("enchantment", Enchantment.class, () -> {
       return Enchantments.field_9130;
    });
-   public static final DefaultedRegistry<EntityType<?>> field_11145 = create("entity_type", "pig", () -> {
+   @Deprecated public static final DefaultedRegistry<EntityType<?>> field_11145 = forgeDefaulted("entity_type", EntityType.class, () -> {
       return EntityType.field_6093;
    });
-   public static final DefaultedRegistry<Item> field_11142 = create("item", "air", () -> {
+   @Deprecated public static final DefaultedRegistry<Item> field_11142 = forgeDefaulted("item", Item.class, () -> {
       return Items.AIR;
    });
-   public static final DefaultedRegistry<Potion> field_11143 = create("potion", "empty", () -> {
+   @Deprecated public static final DefaultedRegistry<Potion> field_11143 = forgeDefaulted("potion", Potion.class, () -> {
       return Potions.field_8984;
    });
-   public static final Registry<Carver<?>> field_11157 = create("carver", () -> {
+   @Deprecated public static final Registry<Carver<?>> field_11157 = forge("carver", Carver.class, () -> {
       return Carver.field_13304;
    });
-   public static final Registry<SurfaceBuilder<?>> field_11147 = create("surface_builder", () -> {
+   @Deprecated public static final Registry<SurfaceBuilder<?>> field_11147 = forge("surface_builder", SurfaceBuilder.class, () -> {
       return SurfaceBuilder.field_15701;
    });
-   public static final Registry<Feature<?>> field_11138 = create("feature", () -> {
+   @Deprecated public static final Registry<Feature<?>> field_11138 = forge("feature", Feature.class, () -> {
       return Feature.field_13517;
    });
-   public static final Registry<Decorator<?>> field_11148 = create("decorator", () -> {
+   @Deprecated public static final Registry<Decorator<?>> field_11148 = forge("decorator", Decorator.class, () -> {
       return Decorator.field_14250;
    });
-   public static final Registry<Biome> field_11153 = create("biome", () -> {
+   @Deprecated public static final Registry<Biome> field_11153 = forge("biome", Biome.class, () -> {
       return Biomes.DEFAULT;
    });
-   public static final Registry<BlockStateProviderType<?>> field_21445 = create("block_state_provider_type", () -> {
+   @Deprecated public static final Registry<BlockStateProviderType<?>> field_21445 = forge("block_state_provider_type", BlockStateProviderType.class, () -> {
       return BlockStateProviderType.field_21305;
    });
-   public static final Registry<BlockPlacerType<?>> field_21446 = create("block_placer_type", () -> {
+   @Deprecated public static final Registry<BlockPlacerType<?>> field_21446 = forge("block_placer_type", BlockPlacerType.class, () -> {
       return BlockPlacerType.field_21223;
    });
-   public static final Registry<FoliagePlacerType<?>> field_21447 = create("foliage_placer_type", () -> {
+   @Deprecated public static final Registry<FoliagePlacerType<?>> field_21447 = forge("foliage_placer_type", FoliagePlacerType.class, () -> {
       return FoliagePlacerType.field_21299;
    });
-   public static final Registry<TreeDecoratorType<?>> field_21448 = create("tree_decorator_type", () -> {
+   @Deprecated public static final Registry<TreeDecoratorType<?>> field_21448 = forge("tree_decorator_type", TreeDecoratorType.class, () -> {
       return TreeDecoratorType.field_21321;
    });
-   public static final Registry<ParticleType<? extends ParticleEffect>> field_11141 = create("particle_type", () -> {
+   @Deprecated public static final Registry<ParticleType<? extends ParticleEffect>> field_11141 = forge("particle_type", ParticleType.class, () -> {
       return ParticleTypes.field_11217;
    });
-   public static final Registry<BiomeSourceType<?, ?>> field_11151 = create("biome_source_type", () -> {
+   @Deprecated public static final Registry<BiomeSourceType<?, ?>> field_11151 = forge("biome_source_type", BiomeSourceType.class, () -> {
       return BiomeSourceType.VANILLA_LAYERED;
    });
-   public static final Registry<BlockEntityType<?>> field_11137 = create("block_entity_type", () -> {
+   @Deprecated public static final Registry<BlockEntityType<?>> field_11137 = forge("block_entity_type", BlockEntityType.class, () -> {
       return BlockEntityType.field_11903;
    });
-   public static final Registry<ChunkGeneratorType<?, ?>> field_11149 = create("chunk_generator_type", () -> {
+   @Deprecated public static final Registry<ChunkGeneratorType<?, ?>> field_11149 = forge("chunk_generator_type", ChunkGeneratorType.class, () -> {
       return ChunkGeneratorType.field_12766;
    });
-   public static final Registry<DimensionType> field_11155 = create("dimension_type", () -> {
+   @Deprecated public static final Registry<DimensionType> field_11155 = putDefaultEntry("dimension_type", net.minecraftforge.common.DimensionManager.getRegistry(), () -> {
       return DimensionType.field_13072;
    });
-   public static final DefaultedRegistry<PaintingMotive> PAINTING_MOTIVE = create("motive", "kebab", () -> {
+   @Deprecated public static final DefaultedRegistry<PaintingMotive> PAINTING_MOTIVE = forgeDefaulted("motive", PaintingMotive.class, () -> {
       return PaintingMotive.field_7146;
    });
    public static final Registry<Identifier> field_11158 = create("custom_stat", () -> {
       return Stats.field_15428;
    });
-   public static final DefaultedRegistry<ChunkStatus> field_16643 = create("chunk_status", "empty", () -> {
+   @Deprecated public static final DefaultedRegistry<ChunkStatus> field_16643 = forgeDefaulted("chunk_status", ChunkStatus.class, () -> {
       return ChunkStatus.field_12798;
    });
-   public static final Registry<StructureFeature<?>> field_16644 = create("structure_feature", () -> {
-      return StructureFeatures.field_16709;
-   });
+   @Deprecated public static final Registry<StructureFeature<?>> field_16644 = net.minecraftforge.registries.GameData.getStructureFeatures();
    public static final Registry<StructurePieceType> field_16645 = create("structure_piece", () -> {
       return StructurePieceType.MINESHAFT_ROOM;
    });
@@ -164,37 +165,37 @@
    public static final Registry<StructurePoolElementType> field_16793 = create("structure_pool_element", () -> {
       return StructurePoolElementType.field_16972;
    });
-   public static final Registry<ContainerType<?>> CONTAINER = create("menu", () -> {
+   @Deprecated public static final Registry<ContainerType<?>> CONTAINER = forge("menu", ContainerType.class, () -> {
       return ContainerType.field_17329;
    });
    public static final Registry<RecipeType<?>> field_17597 = create("recipe_type", () -> {
       return RecipeType.CRAFTING;
    });
-   public static final Registry<RecipeSerializer<?>> field_17598 = create("recipe_serializer", () -> {
+   @Deprecated public static final Registry<RecipeSerializer<?>> field_17598 = forge("recipe_serializer", RecipeSerializer.class, () -> {
       return RecipeSerializer.SHAPELESS;
    });
-   public static final Registry<StatType<?>> field_11152 = create("stat_type", () -> {
+   @Deprecated public static final Registry<StatType<?>> field_11152 = forge("stat_type", StatType.class, () -> {
       return Stats.field_15372;
    });
    public static final DefaultedRegistry<VillagerType> field_17166 = create("villager_type", "plains", () -> {
       return VillagerType.PLAINS;
    });
-   public static final DefaultedRegistry<VillagerProfession> field_17167 = create("villager_profession", "none", () -> {
+   @Deprecated public static final DefaultedRegistry<VillagerProfession> field_17167 = forgeDefaulted("villager_profession", VillagerProfession.class, () -> {
       return VillagerProfession.field_17051;
    });
-   public static final DefaultedRegistry<PointOfInterestType> field_18792 = create("point_of_interest_type", "unemployed", () -> {
+   @Deprecated public static final DefaultedRegistry<PointOfInterestType> field_18792 = forgeDefaulted("point_of_interest_type", PointOfInterestType.class, () -> {
       return PointOfInterestType.field_18502;
    });
-   public static final DefaultedRegistry<MemoryModuleType<?>> field_18793 = create("memory_module_type", "dummy", () -> {
+   @Deprecated public static final DefaultedRegistry<MemoryModuleType<?>> field_18793 = forgeDefaulted("memory_module_type", MemoryModuleType.class, () -> {
       return MemoryModuleType.field_18437;
    });
-   public static final DefaultedRegistry<SensorType<?>> field_18794 = create("sensor_type", "dummy", () -> {
+   @Deprecated public static final DefaultedRegistry<SensorType<?>> field_18794 = forgeDefaulted("sensor_type", SensorType.class, () -> {
       return SensorType.field_18465;
    });
-   public static final Registry<Schedule> field_18795 = create("schedule", () -> {
+   @Deprecated public static final Registry<Schedule> field_18795 = forge("schedule", Schedule.class, () -> {
       return Schedule.EMPTY;
    });
-   public static final Registry<Activity> field_18796 = create("activity", () -> {
+   @Deprecated public static final Registry<Activity> field_18796 = forge("activity", Activity.class, () -> {
       return Activity.field_18595;
    });
 
@@ -246,6 +247,14 @@
       return ((MutableRegistry<T>)p_218343_0_).set(p_218343_1_, new Identifier(p_218343_2_), p_218343_3_);
    }
 
+   private static <T extends net.minecraftforge.registries.IForgeRegistryEntry<T>> Registry<T> forge(String name, Class<? super T> cls, Supplier<T> def) {
+      return putDefaultEntry(name, net.minecraftforge.registries.GameData.<T>getWrapper(cls), def);
+   }
+
+   private static <T extends net.minecraftforge.registries.IForgeRegistryEntry<T>> DefaultedRegistry<T> forgeDefaulted(String name, Class<? super T> cls, Supplier<T> def) {
+      return Registry.<T, DefaultedRegistry<T>>putDefaultEntry(name, net.minecraftforge.registries.GameData.<T>getWrapperDefaulted(cls), def);
+   }
+
    static {
       DEFAULT_ENTRIES.entrySet().forEach((p_229397_0_) -> {
          if (p_229397_0_.getValue().get() == null) {
